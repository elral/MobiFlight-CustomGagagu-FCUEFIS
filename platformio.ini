; PlatformIO Project Configuration File
;
; Supported platforms for the MobiFlight firmware are:
; atmega2560
; promicro
; uno
;
; Version numbers for releases are automatically applied by GitHub
; during the release build process based on the tag associated with
; the GitHub release.

; To ensure builds work correctly in GitHub the default_envs
; should always be set to all supported MobiFlight platforms.
; If you want to only build a single platform locally during
; development use VSCode to change the target to a non-default
; by clicking on the target name in the bottom status bar.
[platformio]
; include custom environments to be build
extra_configs =
	;./CustomDevices/Gagagu/gagagu_fcu_efis.ini

; Common build settings across all devices
[env]
lib_deps = 
	waspinator/AccelStepper @ 1.61
	https://github.com/MobiFlight/LiquidCrystal_I2C#v1.1.4
	https://github.com/MobiFlight/Arduino-CmdMessenger#4.2.1
custom_lib_deps_Atmel =
	arduino-libraries/Servo @ 1.1.8
build_flags =
	-DMF_REDUCE_FUNCT_LEDCONTROL
	-DMAXCALLBACKS=35
	-DSERIAL_RX_BUFFER_SIZE=96
	-DMESSENGERBUFFERSIZE=96
	-DMAXSTREAMBUFFERSIZE=96
	-DDEFAULT_TIMEOUT=5000
;	-DDEBUG2CMDMESSENGER=1
	-I./src/MF_Analog
	-I./src/MF_Button
	-I./src/MF_Encoder
	-I./src/MF_InputShifter
	-I./src/MF_DigInMux
	-I./src/MF_LCDDisplay
	-I./src/MF_Output
	-I./src/MF_OutputShifter
	-I./src/MF_Segment
	-I./src/MF_Servo
	-I./src/MF_Stepper
	-I./src/MF_Modules
build_src_filter =
	+<*>
	-<./MF_CustomDevice>
extra_scripts =
	pre:get_version.py
	;pre:get_CustomDevices.py

; Build settings for the Arduino Mega
[env:mobiflight_mega]
platform = atmelavr
board = megaatmega2560
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_Mega
build_src_filter = 
	${env.build_src_filter}
lib_deps = 
	${env.lib_deps}
	${env.custom_lib_deps_Atmel}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}


; ******************************************************************************************
; working environment for template of custom firmware
; ******************************************************************************************
; Common build settings across this custom device
[env_gagagu_fcu_efis]
build_flags = 
	-DMF_CUSTOMDEVICE_SUPPORT=1							; Required for Custom Devices
	;-DMF_CUSTOMDEVICE_HAS_UPDATE						; if the custom device needs to be updated, uncomment this. W/o the following define it will be done each loop()
	;-DMF_CUSTOMDEVICE_POLL_MS=10 						; time in ms between updating custom device, uncomment this if custom device needs to be updated regulary
	-I./src/MF_CustomDevice								; don't change this one!
	-I./CustomDevices/Gagagu							; Include files for your custom device, replace "_template" by your folder name
	-I./CustomDevices/Gagagu/Fonts
build_src_filter = 
	+<./MF_CustomDevice>								; don't change this one!
	+<../CustomDevices/Gagagu>							; build files for your custom device, replace "_template" by your folder name
lib_deps =												; You can add additional libraries if required
	adafruit/Adafruit GFX Library @ ^1.11.9
	adafruit/Adafruit SSD1306 @ ^2.5.9
	adafruit/Adafruit SH110X @ ^2.1.10
custom_firmware_version = 0.9.0							; set this to your custom firmware version, must match "LatestFirmwareVersion" within board.json file

; Build settings for the Arduino Mega with Custom Firmware Template
[env:gagagu_fcu_efis_mega]
platform = atmelavr
board = megaatmega2560
framework = arduino
build_flags = 
	${env.build_flags}									; don't change this one!
	${env_gagagu_fcu_efis.build_flags}					; don't change this one!
	-I./_Boards/Atmel/Board_Mega						; Include the required board definition. If you need your own definition, adapt this to your path (e.g. -I./CustomDevices/_template/_Boards)
	'-DMOBIFLIGHT_TYPE="Gagagu FCU/EFIS Mega"'			; this must match with "MobiFlightType" within the .json file
	'-DMOBIFLIGHT_NAME="Gagagu FCU/EFIS Mega"' 			; this will show up as Name in the settings dialog unless it gets change from there
build_src_filter = 
	${env.build_src_filter}								; don't change this one!
	${env_gagagu_fcu_efis.build_src_filter}				; don't change this one!	
lib_deps = 
	${env.lib_deps}										; don't change this one!
	${env.custom_lib_deps_Atmel}						; don't change this one! You can add additional libraries if required
	${env_gagagu_fcu_efis.lib_deps}						; don't change this one!
monitor_speed = 115200									; don't change this one!
extra_scripts = 
	${env.extra_scripts}								; don't change this one!
custom_firmware_version = ${env_gagagu_fcu_efis.custom_firmware_version}	; don't change this one!

; Build settings for the Raspberry Pico with Custom Firmware Template
[env:gagagu_fcu_efis_raspberrypico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = arduino
board_build.core = earlephilhower
board_build.filesystem_size = 0M
lib_ldf_mode = chain+
upload_protocol = mbed
; nothing needs to be cahnged above this line
build_flags =
	${env.build_flags}									; don't change this one!
	${env_gagagu_fcu_efis.build_flags}					; don't change this one!
	-I./_Boards/RaspberryPi/Pico						; Include the required board definition. If you need your own definition, adapt this to your path (e.g. -I./CustomDevices/_template/_Boards)
	'-DMOBIFLIGHT_TYPE="Gagagu FCU/EFIS RaspiPico"'		; this must match with "MobiFlightType" within the .json file
	'-DMOBIFLIGHT_NAME="Gagagu FCU/EFIS RaspiPico"'		; this will show up as Name in the settings dialog unless it gets change from there
build_src_filter =
	${env.build_src_filter}								; don't change this one!
	${env_gagagu_fcu_efis.build_src_filter}				; don't change this one!	
lib_deps =
	${env.lib_deps}										; don't change this one!You can add additional libraries if required
	ricaun/ArduinoUniqueID @ ^1.3.0						; don't change this one!You can add additional libraries if required
	${env_gagagu_fcu_efis.lib_deps}						; don't change this one!
monitor_speed = 115200									; don't change this one!
extra_scripts = 
	${env.extra_scripts}								; don't change this one!
custom_firmware_version = ${env_gagagu_fcu_efis.custom_firmware_version}	; don't change this one!
